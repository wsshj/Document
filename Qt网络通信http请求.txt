1.在 .pro 中添加网络库
    QT += network

2.四个必要的变量，注意包含头文件
    QNetworkRequest request; // 服务请求
    QNetworkAccessManager manager; //网络通信主要类，包含其发送的请求的通用配置和设置
    QNetworkReply* reply; // 服务响应
    QEventLoop loop; // 循环事件

3.表单数据QHttpMultiPart与QHttpPart
    HTTP表单提交需要借助 QHttpMultiPart 与 QHttpPart 两个类，官方文档有 demo（直接F1查看QHttpMultiPart）。

4. get 请求
    void GaodeGet::GetRequest()
    {
        QNetworkRequest request1;
        QNetworkAccessManager nam;
        connect(&nam, &QNetworkAccessManager::finished, this, &GaodeGet::receiveGaodeGetReply);
    
        //get与post的请求方式有所不同，get是在接口名后添加 ? 和传输的数据(type)
        request1.setUrl(QUrl("http://123.12.365.152/接口名?type"));
        request1.setHeader(QNetworkRequest::ContentTypeHeader,QVariant("application/json;charset=utf-8"));
        QString token = "xxxxxxxxxxxxxxxxxxxxxxxx";
        QString token_headerData = token;
        request1.setRawHeader("token",token_headerData.toLocal8Bit());
        QNetworkReply *reply = nam.get(request1);    //get请求头
    
        //开启事件循环，直到请求完成
        QEventLoop loop;
        connect(reply,&QNetworkReply::finished,&loop,&QEventLoop::quit);
        loop.exec();
    }
    
    //接收get请求返回的数据
    void GaodeGet::receiveGaodeGetReply(QNetworkReply *reply)
    {
        QString res = reply->readAll();
        qDebug() << "GaoDeWidget::receiveReply_get recive:" << res;
    }

5. post 请求
    void Widget::PostRequest()
    {
        // json
        QByteArray byte_array; 

        // Form表单
        QString post_data="type1=1&type2=2"; 

        //http请求
        QNetworkRequest request;
        QNetworkAccessManager manager;
        QNetworkReply* reply;
        QEventLoop loop;

        QString url = "http://localhost:8000/PushCokePlan/insert/";

        request.setUrl(url);

        connect(&manager, &QNetworkAccessManager::finished, this, &FormWidget::receiveGaodePostReply);

        // json头
        request.setHeader(QNetworkRequest::ContentTypeHeader,QVariant("application/json"));

        // Form表单头
        QString header="application/x-www-form-urlencoded";

    //    //请求头token设置
    //    QString token = "xxxxxxxxxxxxxxxxxxxxxxxx";
    //    QString token_headerData = token;
    //    request.setRawHeader("token",token_headerData.toLocal8Bit());

        reply = manager.post(request, byte_array); //post请求头+传输的数据

        //开启事件循环，直到请求完成
        QObject::connect(reply, SIGNAL(finished()), &loop, SLOT(quit()));

        loop.exec();
    }

    //接收 post 请求返回的数据
    QString FormWidget::receiveGaodePostReply(QNetworkReply *reply)
    {
        QString res = reply->readAll();

        QMessageBox::information(this,"提示", res,QMessageBox::Ok);

        return res;
    }